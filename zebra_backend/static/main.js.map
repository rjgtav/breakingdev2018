{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/notification.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/time.pipe.ts","webpack:///./src/app/shared/time.service.ts","webpack:///./src/app/shared/util.ts","webpack:///./src/app/shared/zebra-task.model.ts","webpack:///./src/app/shared/zebra.service.ts","webpack:///./src/app/zebra-todo/zebra-todo-add/zebra-todo-add.component.css","webpack:///./src/app/zebra-todo/zebra-todo-add/zebra-todo-add.component.html","webpack:///./src/app/zebra-todo/zebra-todo-add/zebra-todo-add.component.ts","webpack:///./src/app/zebra-todo/zebra-todo-list/zebra-todo-list.component.css","webpack:///./src/app/zebra-todo/zebra-todo-list/zebra-todo-list.component.html","webpack:///./src/app/zebra-todo/zebra-todo-list/zebra-todo-list.component.ts","webpack:///./src/app/zebra-todo/zebra-todo-settings/zebra-todo-settings.component.css","webpack:///./src/app/zebra-todo/zebra-todo-settings/zebra-todo-settings.component.html","webpack:///./src/app/zebra-todo/zebra-todo-settings/zebra-todo-settings.component.ts","webpack:///./src/app/zebra-todo/zebra-todo.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ZebraTodoListComponent} from \"./zebra-todo/zebra-todo-list/zebra-todo-list.component\";\nimport {ZebraTodoAddComponent} from \"./zebra-todo/zebra-todo-add/zebra-todo-add.component\";\nimport {ZebraTodoSettingsComponent} from \"./zebra-todo/zebra-todo-settings/zebra-todo-settings.component\";\n\nconst routes: Routes = [\n  { path: '', component: ZebraTodoListComponent },\n  { path: 'edit/:id', component: ZebraTodoAddComponent },\n  { path: 'new', component: ZebraTodoAddComponent },\n  { path: 'settings', component: ZebraTodoSettingsComponent },\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ],\n})\nexport class AppRoutingModule { }\n","module.exports = \".zebra-background {\\n  top: 0;\\n  z-index: -1;\\n  overflow: hidden;\\n}\\n\\n.zebra-background img {\\n  top: -16px;\\n  left: -16px;\\n  min-height: 100%;\\n  min-width: 100%;\\n  -webkit-filter: blur(8px);\\n          filter: blur(8px);\\n  -webkit-transform: scale(1.2);\\n          transform: scale(1.2);\\n}\\n\"","module.exports = \"<!-- Background -->\\r\\n<div class=\\\"position-fixed w-100 h-100 zebra-background\\\">\\r\\n  <img class=\\\"position-absolute\\\" src=\\\"https://www.bing.com/az/hprichbg/rb/SouthernRightFlukes_ROW13667728800_1920x1080.jpg\\\" />\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container position-relative\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport {NotificationService} from \"./shared/notification.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private notificationService: NotificationService) {}\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport {ZebraTodoModule} from \"./zebra-todo/zebra-todo.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ZebraTodoModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {ZebraService} from \"./zebra.service\";\nimport {Subscription} from \"rxjs\";\nimport {ZebraTask} from \"./zebra-task.model\";\nimport {TimeService} from \"./time.service\";\n\nconst MINUTES = 15;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  interval: number;\n  subscription: Subscription;\n\n  task: ZebraTask;\n  tasks: ZebraTask[];\n  taskNotified: number;\n\n  constructor(private zebraService: ZebraService) {\n      Notification.requestPermission(permission => {\n        if (permission === 'granted') {\n          this.interval = setInterval(() => this.run(), 250);\n          this.subscription = this.zebraService.loadTasks().subscribe(value => this.onTasksChanged(value))\n        }\n      });\n  }\n\n  onTasksChanged(tasks: ZebraTask[]) {\n    this.tasks = tasks;\n    this.task = tasks\n      .filter(value => value.Scheduled >= TimeService.Now())\n      .sort((a, b) => a.Scheduled.getTime() - b.Scheduled.getTime())\n      [0];\n  }\n\n  run() {\n    if (this.task)\n      if (this.task.Scheduled.getTime() - TimeService.Now().getTime() <= MINUTES * 60 * 1000)\n        if (this.taskNotified != this.task.$ID) {\n\n          this.taskNotified = this.task.$ID;\n          new Notification(this.task.Name);\n\n          this.onTasksChanged(this.tasks);\n        }\n  }\n\n\n\n\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {TimePipe} from \"./time.pipe\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [TimePipe],\r\n  declarations: [TimePipe]\r\n})\r\nexport class SharedModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst TIME_MINUTE: number = 1;\nconst TIME_HOUR: number = TIME_MINUTE * 60;\nconst TIME_DAY: number = TIME_HOUR * 24;\n\n@Pipe({\n  name: 'time'\n})\nexport class TimePipe implements PipeTransform {\n\n  transform(value: any, args?: any): string {\n    value = +value;\n\n    let hours = Math.floor(value % TIME_DAY / TIME_HOUR);\n    let minutes = Math.floor(value % TIME_HOUR);\n\n    return (hours < 10 ? '0' : '') + hours + ':' + (minutes < 10 ? '0' : '') + minutes;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  private static delta: number = 0; // in minutes\n  private static interval: number;\n\n  constructor() { }\n\n  static Now(): Date {\n    let result = new Date();\n        result.setMinutes(result.getMinutes() + this.delta * 60);\n\n    return result;\n  }\n\n  static Travel(enable: boolean, direction: number) {\n    clearInterval(TimeService.interval);\n\n    if (enable)\n      TimeService.interval = setInterval(() => TimeService.delta += direction, 500);\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n\r\n  public static DateToUTC(date: Date, timeOnly?: boolean) {\r\n    return date\r\n      ? timeOnly\r\n        ? new Date(Date.UTC(1970, 0, 1, date.getHours(), date.getMinutes()))\r\n        : new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes()))\r\n      : null;\r\n  }\r\n\r\n}\r\n","import {UtilService} from \"./util\";\r\nimport {TimeService} from \"./time.service\";\r\n\r\nexport class ZebraTask {\r\n\r\n  $ID: number;\r\n  Complete: boolean;\r\n  Deadline: Date;\r\n  Duration: Date; // only hours and minutes\r\n  Name: string;\r\n  Notes: string;\r\n  Scheduled: Date;\r\n\r\n  static fromJSON(json: any): ZebraTask {\r\n    let task: ZebraTask = new ZebraTask();\r\n        task.$ID = json['id'];\r\n        task.Deadline = json['deadline']\r\n          ? new Date(Date.parse(json['deadline']))\r\n          : null;\r\n        task.Complete = json['done'];\r\n        task.Duration = new Date(Date.parse('1970-01-01 ' + json['duration']));\r\n        task.Name = json['name'];\r\n        task.Notes = json['notes'];\r\n        task.Scheduled = new Date(Date.parse(json['scheduled']));\r\n\r\n    return task;\r\n  }\r\n  static toJSON(obj: ZebraTask): any {\r\n    return {\r\n      task_id: obj.$ID ? obj.$ID : null,\r\n      duration: UtilService.DateToUTC(obj.Duration),\r\n      deadline: UtilService.DateToUTC(obj.Deadline),\r\n      name: obj.Name,\r\n      notes: obj.Notes ? obj.Notes : '',\r\n      schedule: UtilService.DateToUTC(obj.Scheduled)\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    this.Duration = new Date(0);\r\n    this.Duration.setHours(0);\r\n    this.Duration.setMinutes(0);\r\n    this.Duration.setSeconds(0);\r\n  }\r\n\r\n  get DeadlineInMinutes(): number {\r\n    return this.Deadline\r\n      ? this.Deadline.getHours() * 60 + this.Deadline.getMinutes()\r\n      : 0;\r\n  }\r\n  get DurationInMinutes(): number {\r\n    return this.Duration\r\n      ? this.Duration.getHours() * 60 + this.Duration.getMinutes()\r\n      : 0;\r\n  }\r\n  get ScheduledInMinutes(): number {\r\n    return this.Scheduled\r\n      ? this.Scheduled.getHours() * 60 + this.Scheduled.getMinutes()\r\n      : 0;\r\n  }\r\n\r\n  get IsToday(): boolean {\r\n    return this.Scheduled != null && this.Scheduled.toDateString() == TimeService.Now().toDateString();\r\n  }\r\n  get IsScheduled(): boolean {\r\n    return this.Scheduled && !this.Complete && !this.IsToday;\r\n  }\r\n\r\n  get IsValid(): boolean {\r\n    return !!this.Duration && !!this.Name;\r\n  }\r\n\r\n  get TimeStartInMinutes(): number {\r\n    return this.Scheduled.getHours() * 60 + this.Scheduled.getMinutes();\r\n  }\r\n  get TimeEndInMinutes(): number {\r\n    return (this.DurationInMinutes + this.TimeStartInMinutes) % (24 * 60);\r\n  }\r\n\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {ZebraTask} from \"./zebra-task.model\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {flatMap, map} from \"rxjs/operators\";\r\nimport {UtilService} from \"./util\";\r\nimport {TimeService} from \"./time.service\";\r\n\r\nconst BASE_URL = 'http://127.0.0.1:8080/';\r\nconst STORAGE_LOCAL_ID = 'zebra.account.id';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ZebraService {\r\n\r\n  calendars: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n  tasks: BehaviorSubject<ZebraTask[]> = new BehaviorSubject([]);\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  loadCalendars(): Observable<string[]> {\r\n    this.requestParameters()\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'cals/get/', params)))\r\n        .subscribe(value => this.calendars.next(value as string[]));\r\n\r\n    return this.calendars.asObservable();\r\n  }\r\n\r\n  loadTasks(force?: boolean): Observable<ZebraTask[]> {\r\n    if (force || this.tasks.getValue().length == 0)\r\n      this.requestParameters()\r\n        .subscribe(params => this.http\r\n          .post(BASE_URL + 'get/', params)\r\n          .subscribe(value => {\r\n            let tasks: object[] = value[0].concat(value[1]);\r\n            this.tasks.next(tasks.map(task => ZebraTask.fromJSON(task)));\r\n          }));\r\n\r\n    return this.tasks.asObservable();\r\n  }\r\n\r\n  private accountLogin(): Observable<string> {\r\n    return Observable.create((observable) => {\r\n      let user = localStorage.getItem(STORAGE_LOCAL_ID);\r\n\r\n      if (user) {\r\n        observable.next(user);\r\n        observable.complete();\r\n      } else {\r\n        this.http.get(BASE_URL + 'signup/').subscribe(value => {\r\n          user = value['id'];\r\n          observable.next(user);\r\n          observable.complete();\r\n\r\n          localStorage.setItem(STORAGE_LOCAL_ID, user);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  calendarAdd(calendar: string): Observable<object> {\r\n    return this.requestParameters({ url: calendar })\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'cals/add/', params)));\r\n  }\r\n  calendarDelete(calendar: string): Observable<object> {\r\n    return this.requestParameters({ url: calendar })\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'cals/del/', params)));\r\n  }\r\n\r\n  taskAdd(task: ZebraTask): Observable<object> {\r\n    return this.requestParameters(ZebraTask.toJSON(task))\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'add/', params)));\r\n  }\r\n\r\n  taskComplete(task: ZebraTask): Observable<object> {\r\n    let params: object = { task_id: task.$ID };\r\n    let complete = !task.Complete;\r\n\r\n    if (complete) {\r\n      let now = TimeService.Now();\r\n      let timeTaken: number = now.getTime() - task.Scheduled.getTime();\r\n          timeTaken = timeTaken < 0 ? task.Duration.getTime() : timeTaken;\r\n          timeTaken = Math.min(timeTaken, task.Duration.getTime() * 4);\r\n\r\n      params['time_taken'] = UtilService.DateToUTC(new Date(timeTaken));\r\n\r\n      return this.requestParameters(params)\r\n        .pipe(flatMap(params => this.http\r\n          .post(BASE_URL + 'complete/', this.requestParameters(params))));\r\n    } else {\r\n      return this.requestParameters(params)\r\n        .pipe(flatMap(params => this.http.post(BASE_URL + 'uncomplete/', params)));\r\n    }\r\n  }\r\n\r\n  taskDelete(id: number): Observable<object> {\r\n    return this.requestParameters({ task_id: id })\r\n      .pipe(flatMap(params => this.http.post(BASE_URL + 'delete/', params)));\r\n  }\r\n\r\n  taskEdit(task: ZebraTask): Observable<object> {\r\n    return this.requestParameters(ZebraTask.toJSON(task))\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'edit/', params)));\r\n  }\r\n\r\n  taskGet(id: number): Observable<ZebraTask> {\r\n    return this.loadTasks().pipe(map(tasks => tasks.find(value => value.$ID == id)));\r\n  }\r\n\r\n  taskPostpone(id: number): Observable<object> {\r\n    return this.requestParameters({ task_id: id })\r\n      .pipe(flatMap(params => this.http\r\n        .post(BASE_URL + 'postpone/', params)));\r\n  }\r\n\r\n  taskReplace(id: number): Observable<object> {\r\n    return this.requestParameters({ task_id: id })\r\n      .pipe(flatMap(params => this\r\n        .http.post(BASE_URL + 'switch/', params)));\r\n  }\r\n\r\n  private requestParameters(params?: object): Observable<object> {\r\n    return this.accountLogin().pipe(map(user => {\r\n      params = params || {};\r\n      params['user'] = user;\r\n      params['time'] = UtilService.DateToUTC(TimeService.Now());\r\n      return params;\r\n    }));\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<owl-date-time #DueDate [pickerMode]=\\\"'dialog'\\\"></owl-date-time>\\r\\n<owl-date-time #Duration [pickerMode]=\\\"'dialog'\\\" [pickerType]=\\\"'timer'\\\"></owl-date-time>\\r\\n<owl-date-time #Scheduled [pickerMode]=\\\"'dialog'\\\"></owl-date-time>\\r\\n\\r\\n<!-- Back -->\\r\\n<div class=\\\"col position-fixed text-white\\\" style=\\\"top: 0.5rem; width: auto;\\\">\\r\\n  <div class=\\\"row align-items-center\\\"\\r\\n       (click)=\\\"onBackClick()\\\">\\r\\n    <fa-icon class=\\\"mr-2\\\" style=\\\"font-size: 2rem\\\" [icon]=\\\"faChevronLeft\\\"></fa-icon>\\r\\n    <span>Back</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Header -->\\r\\n<div class=\\\"row text-white\\\" style=\\\"margin-top: 96px; margin-bottom: 1rem;\\\">\\r\\n  <div class=\\\"d-flex flex-row justify-content-center w-100\\\">\\r\\n    <fa-icon style=\\\"font-size: 2rem\\\" [icon]=\\\"isNew ? faPlus : faPencilAlt\\\"></fa-icon>\\r\\n  </div>\\r\\n  <div class=\\\"font-weight-bold text-center text-uppercase w-100\\\">{{ isNew ? 'New' : 'Edit'}} Task</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col\\\">\\r\\n  <!-- Completed & Name -->\\r\\n  <div class=\\\"row position-relative align-items-center bg-white pl-3 pr-3\\\" style=\\\"height: 3rem\\\">\\r\\n    <fa-icon class=\\\"mr-3\\\"\\r\\n             [icon]=\\\"task.Complete ? faCheckCircle : faCircle\\\" style=\\\"font-size: 120%\\\"\\r\\n             [ngClass]=\\\"{ 'text-success': task.Complete }\\\"\\r\\n             [style.opacity]=\\\"!isNew ? 1 : 0.5\\\"\\r\\n             (click)=\\\"onCompleteClick()\\\"></fa-icon>\\r\\n    <input class=\\\"flex-grow-1 border-0\\\" [(ngModel)]=\\\"task.Name\\\" placeholder=\\\"Buy milk\\\" type=\\\"text\\\" />\\r\\n  </div>\\r\\n\\r\\n  <!-- Duration -->\\r\\n  <div class=\\\"row position-relative align-items-center bg-white pl-3 pr-3 mt-2\\\" style=\\\"height: 3rem\\\"\\r\\n       [owlDateTimeTrigger]=\\\"Duration\\\">\\r\\n    <input [owlDateTime]=\\\"Duration\\\" [(ngModel)]=\\\"task.Duration\\\" [max]=\\\"DURATION_MAX\\\" [min]=\\\"DURATION_MIN\\\" type=\\\"hidden\\\">\\r\\n\\r\\n    <fa-icon class=\\\"mr-3\\\"\\r\\n             [icon]=\\\"faStopwatch\\\" style=\\\"font-size: 120%\\\"\\r\\n             [style.opacity]=\\\"task.DurationInMinutes ? 1 : 0.5\\\"></fa-icon>\\r\\n\\r\\n    <span *ngIf=\\\"!task.DurationInMinutes\\\" style=\\\"opacity: 0.5\\\">Duration</span>\\r\\n    <span *ngIf=\\\"task.DurationInMinutes\\\" style=\\\"line-height: 1\\\">{{ task.DurationInMinutes | time }}</span>\\r\\n\\r\\n    <span class=\\\"position-absolute border-bottom\\\" style=\\\"width: calc(100% - 2rem); bottom: 0\\\"></span>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <!-- Due Date -->\\r\\n  <div class=\\\"row position-relative align-items-center bg-white pl-3 pr-3\\\" style=\\\"height: 3rem\\\"\\r\\n       [owlDateTimeTrigger]=\\\"DueDate\\\">\\r\\n    <input [owlDateTime]=\\\"DueDate\\\" [(ngModel)]=\\\"task.Deadline\\\" type=\\\"hidden\\\">\\r\\n\\r\\n    <fa-icon class=\\\"mr-3\\\"\\r\\n             [icon]=\\\"faCalendarAlt\\\" style=\\\"font-size: 120%\\\"\\r\\n             [style.opacity]=\\\"task.DeadlineInMinutes ? 1 : 0.5\\\"></fa-icon>\\r\\n\\r\\n    <span *ngIf=\\\"!task.DeadlineInMinutes\\\" style=\\\"opacity: 0.5\\\">Due date</span>\\r\\n    <span *ngIf=\\\"task.DeadlineInMinutes\\\" style=\\\"line-height: 1\\\">\\r\\n      <span>Due {{ task.Deadline | date }}</span><br/>\\r\\n      <small class=\\\"text-muted\\\">{{ task.DeadlineInMinutes | time }}</small>\\r\\n    </span>\\r\\n\\r\\n    <span *ngIf=\\\"!isNew\\\" class=\\\"position-absolute border-bottom\\\" style=\\\"width: calc(100% - 2rem); bottom: 0\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <!-- Scheduled -->\\r\\n  <div *ngIf=\\\"!isNew\\\" class=\\\"row position-relative align-items-center bg-white pl-3 pr-3\\\" style=\\\"height: 3rem\\\"\\r\\n       [owlDateTimeTrigger]=\\\"Scheduled\\\">\\r\\n    <input [owlDateTime]=\\\"Scheduled\\\" [(ngModel)]=\\\"task.Scheduled\\\" type=\\\"hidden\\\">\\r\\n\\r\\n    <fa-icon class=\\\"mr-3\\\"\\r\\n             [icon]=\\\"faClock\\\" style=\\\"font-size: 120%\\\"\\r\\n             [style.opacity]=\\\"task.ScheduledInMinutes ? 1 : 0.5\\\"></fa-icon>\\r\\n\\r\\n    <span *ngIf=\\\"!task.ScheduledInMinutes\\\" style=\\\"opacity: 0.5\\\">Scheduled date</span>\\r\\n    <span *ngIf=\\\"task.ScheduledInMinutes\\\" style=\\\"line-height: 1\\\">\\r\\n      <span>Scheduled for {{ task.Scheduled | date }}</span><br/>\\r\\n      <small class=\\\"text-muted\\\">{{ task.ScheduledInMinutes | time }}</small>\\r\\n    </span>\\r\\n\\r\\n    <span *ngIf=\\\"!isNew\\\" class=\\\"position-absolute border-bottom\\\" style=\\\"width: calc(100% - 2rem); bottom: 0\\\"></span>\\r\\n  </div>\\r\\n\\r\\n  <!-- Actions -->\\r\\n  <div *ngIf=\\\"!isNew && !task.Complete\\\"\\r\\n       class=\\\"row position-relative align-items-center bg-white text-primary pl-3 pr-3 mt-2\\\" style=\\\"height: 3rem\\\">\\r\\n    <div *ngIf=\\\"task.IsToday\\\" class=\\\"col text-center\\\" style=\\\"opacity: 0.75\\\"\\r\\n         (click)=\\\"onPostponeClick()\\\">\\r\\n      <fa-icon class=\\\"mr-3\\\" style=\\\"font-size: 120%\\\"\\r\\n               [icon]=\\\"faCalendarTimes\\\"></fa-icon>\\r\\n      <span>Postpone</span>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"task.IsToday\\\" class=\\\"col text-center\\\" style=\\\"opacity: 0.75\\\"\\r\\n         (click)=\\\"onReplaceClick()\\\">\\r\\n      <fa-icon class=\\\"mr-3\\\" style=\\\"font-size: 120%\\\"\\r\\n               [icon]=\\\"faExchangeAlt\\\"></fa-icon>\\r\\n      <span>Replace</span>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!task.IsToday\\\" class=\\\"col text-center\\\" style=\\\"opacity: 0.75\\\"\\r\\n         (click)=\\\"onTodayClick()\\\">\\r\\n      <fa-icon class=\\\"mr-3\\\" style=\\\"font-size: 120%\\\"\\r\\n               [icon]=\\\"faCalendarPlus\\\"></fa-icon>\\r\\n      <span>Today</span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Notes -->\\r\\n  <div class=\\\"row position-relative bg-white p-3 mt-2\\\" style=\\\"height: 9rem; margin-bottom: 4rem\\\">\\r\\n    <textarea class=\\\"border-0 p-0 w-100 h-100\\\" placeholder=\\\"Add a note\\\" [(ngModel)]=\\\"task.Notes\\\"></textarea>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- Delete/Save button -->\\r\\n<div class=\\\"position-fixed w-100\\\" style=\\\"bottom: 1rem; left: 0;\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"row align-items-center bg-white\\\" style=\\\"height: 3rem\\\">\\r\\n        <div *ngIf=\\\"!task.Complete\\\" class=\\\"col text-center text-primary\\\" style=\\\"opacity: 0.75;\\\"\\r\\n             (click)=\\\"onSaveClick()\\\">\\r\\n          <fa-icon class=\\\"mr-3\\\" style=\\\"font-size: 120%\\\"\\r\\n                   [icon]=\\\"faSave\\\"></fa-icon>\\r\\n          <span>Save</span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isNew\\\" class=\\\"col text-danger text-center\\\"\\r\\n             (click)=\\\"onDeleteClick()\\\">\\r\\n          <fa-icon class=\\\"mr-3\\\" style=\\\"font-size: 120%\\\"\\r\\n                   [icon]=\\\"faTrashAlt\\\"></fa-icon>\\r\\n          <span>Delete</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {\r\n  faCalendarPlus,\r\n  faCalendarTimes,\r\n  faCheckCircle, faChevronLeft, faExchangeAlt, faPencilAlt,\r\n  faPlus,\r\n  faStopwatch,\r\n  faTrashAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ZebraTask} from \"../../shared/zebra-task.model\";\r\nimport {faCalendarAlt, faCircle, faClock, faSave} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {ActivatedRoute, Router, UrlSegment} from \"@angular/router\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ZebraService} from \"../../shared/zebra.service\";\r\nimport {ZebraTodoListComponent} from \"../zebra-todo-list/zebra-todo-list.component\";\r\nimport {TimeService} from \"../../shared/time.service\";\r\n\r\n@Component({\r\n  selector: 'app-zebra-todo-add',\r\n  templateUrl: './zebra-todo-add.component.html',\r\n  styleUrls: ['./zebra-todo-add.component.css']\r\n})\r\nexport class ZebraTodoAddComponent implements OnInit, OnDestroy {\r\n\r\n  readonly DURATION_MIN = new Date(1970, 0, 1, 0, 0);\r\n  readonly DURATION_MAX = new Date(1970, 0, 1, 5, 30);\r\n\r\n  faCalendarAlt = faCalendarAlt;\r\n  faCalendarTimes = faCalendarTimes;\r\n  faCalendarPlus = faCalendarPlus;\r\n  faChevronLeft = faChevronLeft;\r\n  faExchangeAlt = faExchangeAlt;\r\n  faCheckCircle = faCheckCircle;\r\n  faCircle = faCircle;\r\n  faClock = faClock;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlus = faPlus;\r\n  faSave = faSave;\r\n  faStopwatch = faStopwatch;\r\n  faTrashAlt = faTrashAlt;\r\n\r\n  @Input() task: ZebraTask = new ZebraTask();\r\n\r\n  isNew: boolean;\r\n\r\n  subscriptionTask: Subscription;\r\n  subscriptionUrl: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private zebraService: ZebraService) {}\r\n\r\n  onBackClick() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  onCompleteClick() {\r\n    this.zebraService.taskComplete(this.task).subscribe(value => this.onBackClick());\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.zebraService.taskDelete(this.task.$ID).subscribe(value => this.onBackClick());\r\n  }\r\n\r\n  onPostponeClick() {\r\n    this.zebraService.taskPostpone(this.task.$ID).subscribe(value => this.onBackClick());\r\n  }\r\n\r\n  onReplaceClick() {\r\n    this.zebraService.taskReplace(this.task.$ID).subscribe(value => this.onBackClick());\r\n  }\r\n\r\n  onSaveClick() {\r\n    if (!this.task.IsValid)\r\n      return;\r\n\r\n    if (this.isNew) {\r\n      this.zebraService.taskAdd(this.task).subscribe(value => this.onBackClick());\r\n      sessionStorage.removeItem(ZebraTodoListComponent.SESSION_TAB);\r\n    } else {\r\n      this.zebraService.taskEdit(this.task).subscribe(value => this.onBackClick());\r\n    }\r\n  }\r\n\r\n  onTodayClick() {\r\n    this.task.Scheduled = TimeService.Now();\r\n    this.onSaveClick();\r\n  }\r\n\r\n  onTaskChange(task: ZebraTask) {\r\n    if (task == null) return;\r\n    this.task = task;\r\n  }\r\n  onUrlChange(url: UrlSegment[]) {\r\n    let path = url[0].path;\r\n\r\n    if (path == 'new') {\r\n      this.isNew = true;\r\n      this.task = new ZebraTask();\r\n    } else {\r\n      this.isNew = false;\r\n\r\n      this.subscriptionTask && this.subscriptionTask.unsubscribe();\r\n      this.subscriptionTask = this.zebraService.taskGet(parseInt(url[1].path)).subscribe(value => this.onTaskChange(value));\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscriptionUrl && this.subscriptionUrl.unsubscribe();\r\n    this.subscriptionUrl = this.route.url.subscribe(value => this.onUrlChange(value));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptionTask && this.subscriptionTask.unsubscribe();\r\n    this.subscriptionUrl && this.subscriptionUrl.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Time Travelling -->\\r\\n<div class=\\\"col position-fixed w-100\\\" style=\\\"top: 0; left: 0\\\">\\r\\n  <div class=\\\"row ml-5 mr-5\\\">\\r\\n    <div *ngIf=\\\"timeTravel\\\" class=\\\"position-absolute text-center text-white\\\">{{ Today.toString().slice(0, 25) }}</div>\\r\\n    <div class=\\\"col pt-2 pb-2\\\"\\r\\n         (touchstart)=\\\"onTimeTravelClick(true, -1)\\\"\\r\\n         (touchend)=\\\"onTimeTravelClick(false, -1)\\\">&nbsp;</div>\\r\\n    <div class=\\\"col pt-2 pb-2\\\"\\r\\n         (touchstart)=\\\"onTimeTravelClick(true, 1)\\\"\\r\\n         (touchend)=\\\"onTimeTravelClick(false, -1)\\\">&nbsp;</div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Settings -->\\r\\n<div class=\\\"col position-fixed text-white\\\" style=\\\"top: 0.5rem; right: 0.5rem; width: auto;\\\">\\r\\n  <div class=\\\"row align-items-center\\\"\\r\\n       (click)=\\\"onSettingsClick()\\\">\\r\\n    <fa-icon class=\\\"mr-2\\\" style=\\\"font-size: 2rem\\\" [icon]=\\\"faCog\\\"></fa-icon>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Navigation -->\\r\\n<div class=\\\"row text-white\\\" style=\\\"margin-top: 96px;\\\">\\r\\n  <div class=\\\"d-flex flex-row justify-content-center w-100\\\">\\r\\n    <fa-icon class=\\\"mr-2 ml-2\\\" style=\\\"font-size: 2rem\\\"\\r\\n             [icon]=\\\"faCheck\\\"\\r\\n             [style.opacity]=\\\"tab == ZebraTodoListTab.COMPLETED ? 1 : 0.5\\\"\\r\\n             (click)=\\\"onTabClick(ZebraTodoListTab.COMPLETED)\\\"></fa-icon>\\r\\n    <fa-icon class=\\\"mr-2 ml-2\\\" style=\\\"font-size: 2rem\\\"\\r\\n             [icon]=\\\"faCalendarAlt\\\"\\r\\n             [style.opacity]=\\\"tab == ZebraTodoListTab.TODAY ? 1 : 0.5\\\"\\r\\n             (click)=\\\"onTabClick(ZebraTodoListTab.TODAY)\\\"></fa-icon>\\r\\n    <fa-icon class=\\\"mr-2 ml-2\\\" style=\\\"font-size: 2rem\\\"\\r\\n             [icon]=\\\"faClock\\\"\\r\\n             [style.opacity]=\\\"tab == ZebraTodoListTab.SCHEDULED ? 1 : 0.5\\\"\\r\\n             (click)=\\\"onTabClick(ZebraTodoListTab.SCHEDULED)\\\"></fa-icon>\\r\\n  </div>\\r\\n  <div class=\\\"font-weight-bold text-center text-uppercase w-100\\\">{{ tab }}</div>\\r\\n</div>\\r\\n\\r\\n<!-- List -->\\r\\n<div class=\\\"col\\\">\\r\\n  <div *ngFor=\\\"let day of daysByTab[tab]\\\">\\r\\n    <div [style.opacity]=\\\"day.toDateString() != Today.toDateString() ? 1 : 0\\\" class=\\\"text-center\\\">\\r\\n      <span class=\\\"badge badge-dark mb-2 mt-3 ml-auto mr-auto\\\" style=\\\"font-size: inherit; font-weight: inherit\\\">\\r\\n        {{ day.toDateString() }}\\r\\n      </span>\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let task of tasksByTab[tab][day.toDateString()]; let i = index\\\"\\r\\n         class=\\\"row position-relative bg-white pl-3 pr-3 align-items-center\\\" style=\\\"height: 3rem\\\"\\r\\n         [routerLink]=\\\"'/edit/' + task.$ID\\\">\\r\\n      <fa-icon class=\\\"mr-3\\\"\\r\\n               [icon]=\\\"task.Complete ? faCheckCircle : faCircle\\\" style=\\\"font-size: 120%\\\"\\r\\n               [ngClass]=\\\"{ 'text-success': task.Complete }\\\"\\r\\n               (click)=\\\"onCompleteClick($event, task)\\\"></fa-icon>\\r\\n      <span style=\\\"line-height: 1\\\">\\r\\n        <span>{{ task.Name }}</span><br/>\\r\\n        <small class=\\\"text-muted\\\">{{ task.TimeStartInMinutes | time }} ~ {{ task.TimeEndInMinutes | time }}</small>\\r\\n      </span>\\r\\n      <span *ngIf=\\\"i < tasksByTab[tab].length - 1\\\"\\r\\n            class=\\\"position-absolute border-bottom\\\" style=\\\"width: calc(100% - 2rem); bottom: 0\\\"></span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"!daysByTab[tab] || daysByTab[tab].length == 0\\\" class=\\\"pt-5 text-center text-white\\\">\\r\\n    {{\\r\\n        IsTutorial ? 'Press the + button to add a new task' :\\r\\n        tab == ZebraTodoListTab.COMPLETED ? 'Good luck on finishing your tasks!' :\\r\\n        tab == ZebraTodoListTab.TODAY ? 'Enjoy your rest today :)' :\\r\\n        tab == ZebraTodoListTab.SCHEDULED ? 'Press the + button to add a new task' : ''\\r\\n    }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"position-fixed w-100\\\" style=\\\"bottom: 1rem; left: 0;\\\">\\r\\n  <div class=\\\"container position-relative\\\">\\r\\n    <div class=\\\"row justify-content-end\\\" style=\\\"height: 3rem;\\\">\\r\\n      <div routerLink=\\\"/new\\\" class=\\\"d-flex align-items-center justify-content-center bg-white shadow rounded-circle mr-3\\\" style=\\\"width: 3rem; height: 3rem;\\\">\\r\\n        <fa-icon class=\\\"text-info\\\" [icon]=\\\"faPlus\\\"></fa-icon>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {faCalendarAlt, faCheck, faCheckCircle, faClock, faCog, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {ZebraService} from \"../../shared/zebra.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ZebraTask} from \"../../shared/zebra-task.model\";\r\nimport {faCircle} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {TimeService} from \"../../shared/time.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'zebra-todo-list',\r\n  templateUrl: './zebra-todo-list.component.html',\r\n  styleUrls: ['./zebra-todo-list.component.css']\r\n})\r\nexport class ZebraTodoListComponent implements OnInit, OnDestroy {\r\n\r\n  static readonly SESSION_TAB = 'zebra.list.tab';\r\n\r\n  faCalendarAlt = faCalendarAlt;\r\n  faCheck = faCheck;\r\n  faCheckCircle = faCheckCircle;\r\n  faCircle = faCircle;\r\n  faCog = faCog;\r\n  faPlus = faPlus;\r\n  faClock = faClock;\r\n  ZebraTodoListTab = ZebraTodoListTab;\r\n\r\n  daysByTab: { [key: string]: Date[] } = {};\r\n  tab: ZebraTodoListTab;\r\n  tasksByTab: {[key: string]: { [key: number]: ZebraTask[]}} = {};\r\n\r\n  timeTravel: boolean;\r\n\r\n  subscriptionTasks: Subscription;\r\n\r\n  constructor(private router: Router, private zebraService: ZebraService) { }\r\n\r\n  get IsTutorial(): boolean {\r\n    return Object.keys(this.daysByTab).length == 0 || (1 == 1\r\n      && this.daysByTab[this.ZebraTodoListTab.COMPLETED].length == 0\r\n      && this.daysByTab[this.ZebraTodoListTab.TODAY].length == 0\r\n      && this.daysByTab[this.ZebraTodoListTab.SCHEDULED].length == 0\r\n    );\r\n  }\r\n\r\n  get Today(): Date {\r\n    return TimeService.Now();\r\n  }\r\n\r\n  onCompleteClick(event: MouseEvent, task: ZebraTask) {\r\n    event.stopPropagation();\r\n    this.zebraService.taskComplete(task).subscribe(value => this.ngOnInit());\r\n  }\r\n\r\n  onSettingsClick() {\r\n    this.router.navigate(['/settings']);\r\n  }\r\n\r\n  onTabClick(tab: ZebraTodoListTab) {\r\n    this.tab = tab;\r\n    sessionStorage.setItem(ZebraTodoListComponent.SESSION_TAB, this.tab);\r\n  }\r\n\r\n  onTasksChange(tasks: ZebraTask[]) {\r\n    this.daysByTab = {};\r\n    this.daysByTab[ZebraTodoListTab.COMPLETED] = [];\r\n    this.daysByTab[ZebraTodoListTab.TODAY] = [];\r\n    this.daysByTab[ZebraTodoListTab.SCHEDULED] = [];\r\n\r\n    this.tasksByTab = tasks\r\n      .reduce((accumulator, value) => {\r\n        let tab: ZebraTodoListTab;\r\n\r\n        if (value.Complete)           tab = ZebraTodoListTab.COMPLETED;\r\n        else if (value.IsToday)       tab = ZebraTodoListTab.TODAY;\r\n        else if (value.IsScheduled)   tab = ZebraTodoListTab.SCHEDULED;\r\n\r\n        let day = new Date(value.Scheduled.toDateString());\r\n        let tasksByDay = accumulator[tab] = accumulator[tab] || {};\r\n        (tasksByDay[day.toDateString()] = tasksByDay[day.toDateString()] || []).push(value);\r\n\r\n        let days = this.daysByTab[tab] = this.daysByTab[tab] || [];\r\n        let found = false;\r\n        for (let date of days)\r\n          if (day.getTime() == date.getTime()) {\r\n            found = true;\r\n            break;\r\n          }\r\n\r\n        if (!found)\r\n          days.push(day);\r\n\r\n        return accumulator;\r\n    }, {});\r\n\r\n    console.log(this.tasksByTab)\r\n  }\r\n\r\n  onTimeTravelClick(enable: boolean, direction: number) {\r\n    this.timeTravel = enable;\r\n    TimeService.Travel(enable, direction);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tab = sessionStorage.getItem(ZebraTodoListComponent.SESSION_TAB) as ZebraTodoListTab.TODAY || ZebraTodoListTab.TODAY;\r\n\r\n    this.subscriptionTasks && this.subscriptionTasks.unsubscribe();\r\n    this.subscriptionTasks = this.zebraService.loadTasks(true).subscribe(value => this.onTasksChange(value));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptionTasks && this.subscriptionTasks.unsubscribe();\r\n  }\r\n\r\n}\r\n\r\nenum ZebraTodoListTab {\r\n  COMPLETED = 'Completed',\r\n  SCHEDULED = 'Scheduled',\r\n  TODAY = 'Today',\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Back -->\\n<div class=\\\"col position-fixed text-white\\\" style=\\\"top: 0.5rem; width: auto;\\\">\\n  <div class=\\\"row align-items-center\\\"\\n       (click)=\\\"onBackClick()\\\">\\n    <fa-icon class=\\\"mr-2\\\" style=\\\"font-size: 2rem\\\" [icon]=\\\"faChevronLeft\\\"></fa-icon>\\n    <span>Back</span>\\n  </div>\\n</div>\\n\\n<!-- Header -->\\n<div class=\\\"row text-white mb-3\\\" style=\\\"margin-top: 96px;\\\">\\n  <div class=\\\"d-flex flex-row justify-content-center w-100\\\">\\n    <fa-icon style=\\\"font-size: 2rem\\\" [icon]=\\\"faCog\\\"></fa-icon>\\n  </div>\\n  <div class=\\\"font-weight-bold text-center text-uppercase w-100\\\">Settings</div>\\n</div>\\n\\n<!-- Add Calendar -->\\n<div class=\\\"form-row\\\">\\n  <div class=\\\"input-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Calendar\\\" [(ngModel)]=\\\"calendar\\\" />\\n    <div class=\\\"input-group-prepend\\\">\\n      <button class=\\\"btn btn-primary input-group-append\\\" (click)=\\\"onSaveClick()\\\">\\n        <fa-icon [icon]=\\\"faSave\\\"></fa-icon>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Calendars -->\\n<div class=\\\"font-weight-bold text-center text-uppercase text-white w-100 mt-3 mb-3\\\">Calendars</div>\\n\\n<div *ngFor=\\\"let calendar of calendars\\\" class=\\\"form-row mb-2\\\">\\n  <div class=\\\"input-group\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"calendar\\\" readonly />\\n    <div class=\\\"input-group-prepend\\\">\\n      <button class=\\\"btn btn-danger input-group-append\\\" (click)=\\\"onDeleteClick(calendar)\\\">\\n        <fa-icon [icon]=\\\"faTrashAlt\\\"></fa-icon>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {faChevronLeft, faCog, faSave, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {Router} from \"@angular/router\";\nimport {ZebraService} from \"../../shared/zebra.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-zebra-todo-settings',\n  templateUrl: './zebra-todo-settings.component.html',\n  styleUrls: ['./zebra-todo-settings.component.css']\n})\nexport class ZebraTodoSettingsComponent implements OnInit, OnDestroy {\n\n  faChevronLeft = faChevronLeft;\n  faCog = faCog;\n  faSave = faSave;\n  faTrashAlt = faTrashAlt;\n\n  calendars: string[];\n  calendar: string;\n\n  subscriptionCalendars: Subscription;\n\n  constructor(private router: Router, private zebraService: ZebraService) { }\n\n  onBackClick() {\n    this.router.navigate(['/']);\n  }\n\n  onDeleteClick(calendar: string) {\n    if (calendar)\n      this.zebraService.calendarDelete(calendar).subscribe(value => this.zebraService.loadCalendars());\n  }\n  onSaveClick() {\n    if (this.calendar)\n      this.zebraService.calendarAdd(this.calendar).subscribe(value => this.zebraService.loadCalendars());\n  }\n\n  ngOnInit(): void {\n    this.subscriptionCalendars && this.subscriptionCalendars.unsubscribe();\n    this.subscriptionCalendars = this.zebraService.loadCalendars().subscribe(value => this.calendars = value);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionCalendars && this.subscriptionCalendars.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ZebraTodoListComponent} from \"./zebra-todo-list/zebra-todo-list.component\";\r\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\r\nimport {SharedModule} from \"../shared/shared.module\";\r\nimport { ZebraTodoAddComponent } from './zebra-todo-add/zebra-todo-add.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {OwlDateTimeModule, OwlNativeDateTimeModule} from \"ng-pick-datetime\";\r\nimport {NoopAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport { ZebraTodoSettingsComponent } from './zebra-todo-settings/zebra-todo-settings.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    RouterModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [\r\n    ZebraTodoListComponent,\r\n  ],\r\n  declarations: [\r\n    ZebraTodoListComponent,\r\n    ZebraTodoAddComponent,\r\n    ZebraTodoSettingsComponent,\r\n  ]\r\n})\r\nexport class ZebraTodoModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}